@extends('admin.layouts.layout')

@section('content')
    <main class="app-main">
        <div class="card">
            <div class="card-header">
                <h3>–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ —Ç–µ—Å—Ç</h3>
            </div>
            <div class="card-body">
                @if (session('success'))
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        {{ session('success') }}
                        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="–ó–∞–∫—Ä–∏—Ç–∏"></button>
                    </div>
                @endif
                <form method="POST" action="{{ route('admin.course.lesson.test.update', [$lesson->id, $test->id]) }}">
                    @csrf
                    @method('PATCH')

                    <!-- –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –¥–æ —Ç–µ—Å—Ç—É -->
                    <div class="mb-3">
                        <label for="question" class="form-label fw-bold">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è –¥–æ —Ç–µ—Å—Ç—É</label>
                        <textarea name="question" id="question" class="form-control" rows="3">{{ old('question', $test->question) }}</textarea>
                        @if ($errors->has('question'))
                            <div class="alert alert-danger mt-1">
                                {{ $errors->first('question') }}
                            </div>
                        @endif
                    </div>

                    <!-- –†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π -->
                    <h5 class="mb-3 fw-bold">–†–µ–¥–∞–≥—É–≤–∞—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–µ–π</h5>
                    <div id="options-list">
                        @foreach($test->options as $option)
                            <div class="option-item mb-2 d-flex align-items-center gap-2" data-id="{{ $option->id }}">
                                <input type="text" name="options[existing][{{ $option->id }}][option_text]" class="form-control w-50" value="{{ $option->option_text }}">
                                <input type="checkbox" name="options[existing][{{ $option->id }}][is_correct]" value="1" {{ $option->is_correct ? 'checked' : '' }}> –ü—Ä–∞–≤–∏–ª—å–Ω–∞
                                <button type="button" class="btn btn-custom btn-danger btn-sm remove-option" data-id="{{ $option->id }}">üóëÔ∏è</button>
                            </div>
                        @endforeach
                    </div>

                    <div class="my-3">
                        <button type="button" class="btn btn-custom" id="add-option">‚ûï –î–æ–¥–∞—Ç–∏ –≤–∞—Ä—ñ–∞–Ω—Ç</button>
                    </div>
                    @if ($errors->has('options'))
                        <div class="alert alert-danger">
                            {{ $errors->first('options') }}
                        </div>
                    @endif
                    <button type="submit" class="btn btn-custom">üíæ –ó–±–µ—Ä–µ–≥—Ç–∏ –∑–º—ñ–Ω–∏</button>
                </form>
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            console.log("–°–∫—Ä–∏–ø—Ç —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è —Ç–µ—Å—Ç—É –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–æ");
            const optionsList = document.getElementById('options-list');

            // –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –±–ª–æ–∫—É–≤–∞–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –≤–∏–¥–∞–ª–µ–Ω–Ω—è, —è–∫—â–æ –∑–∞–ª–∏—à–∏–ª–æ—Å—è –º–µ–Ω—à–µ 3-—Ö –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤
            function updateDeleteButtons() {
                const options = optionsList.querySelectorAll('.option-item');
                options.forEach(optionItem => {
                    const removeBtn = optionItem.querySelector('.remove-option');
                    removeBtn.disabled = (options.length <= 3);
                });
            }

            // –í–∏–¥–∞–ª–µ–Ω–Ω—è –æ–ø—Ü—ñ—ó: —è–∫—â–æ —ñ—Å–Ω—É—î data-id, –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ AJAX-–∑–∞–ø–∏—Ç; –¥–ª—è –Ω–æ–≤–∏—Ö ‚Äì –≤–∏–¥–∞–ª—è—î–º–æ –µ–ª–µ–º–µ–Ω—Ç
            optionsList.addEventListener('click', function (e) {
                if (e.target.classList.contains('remove-option')) {
                    const optionId = e.target.dataset.id;
                    const optionItem = e.target.closest('.option-item');

                    if (!optionId) {
                        optionItem.remove();
                        updateDeleteButtons();
                        return;
                    }

                    fetch(`/admin/course/lesson/test/option/${optionId}`, {
                        method: 'DELETE',
                        headers: {
                            'X-CSRF-TOKEN': '{{ csrf_token() }}',
                            'Accept': 'application/json'
                        }
                    })
                        .then(res => res.json())
                        .then(data => {
                            if (data.success) {
                                optionItem.remove();
                                updateDeleteButtons();
                            } else {
                                alert(data.message);
                            }
                        })
                        .catch(err => console.error('Ajax error', err));
                }
            });

            // –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–æ—ó –æ–ø—Ü—ñ—ó
            document.getElementById('add-option').addEventListener('click', function () {
                const currentOptions = optionsList.querySelectorAll('.option-item');
                if (currentOptions.length >= 5) {
                    alert('–ú–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –º–∞–∫—Å–∏–º—É–º 5 –≤–∞—Ä—ñ–∞–Ω—Ç—ñ–≤ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.');
                    return;
                }

                const index = Date.now(); // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π —ñ–Ω–¥–µ–∫—Å –¥–ª—è –Ω–æ–≤–æ—ó –æ–ø—Ü—ñ—ó
                const html = `
                    <div class="option-item mb-2 d-flex align-items-center gap-2">
                        <input type="text" name="options[new][${index}][option_text]" class="form-control w-50" placeholder="–ù–æ–≤–∏–π –≤–∞—Ä—ñ–∞–Ω—Ç">
                        <input type="checkbox" name="options[new][${index}][is_correct]"> –ü—Ä–∞–≤–∏–ª—å–Ω–∞
                        <button type="button" class="btn btn-custom btn-danger btn-sm remove-option" data-id="">üóëÔ∏è</button>
                    </div>`;
                optionsList.insertAdjacentHTML('beforeend', html);
                updateDeleteButtons();
            });

            updateDeleteButtons();
        });
    </script>
@endsection
